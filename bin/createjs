#!/usr/bin/env node

var gcin = require('../index');
var argv = require('optimist')
  .usage('Creates js files from gcin files.\nUsage: $0 -n [nsPrefix] -d [gcinDir] -o [outputDir] [-p [lang:poFile]]')
  .boolean('self')
  .alias('self', 's')
  .describe('s', 'Create js in source language')
  .demand('dir')
  .alias('dir', 'd')
  .describe('dir', 'Directory of gcin files')
  .alias('po', 'p')
  .describe('po', 'Language : Po file')
  .boolean('strict')
  .describe('strict', 'Throws exception if messages with no translation found')
  .alias('notranslabel', 'l')
  .describe('notranslabel', 'String for tokens without translation')
  .demand('output')
  .alias('output', 'o')
  .describe('output', 'Path to directory')
  // .demand('lang')
  // .alias('lang', 'l')
  // .describe('lang', 'Output language')
  .demand('nsprefix')
  .alias('nsprefix', 'n')
  .describe('nsprefix', 'Namespace prefix')
  .argv;

var poTemp = argv.po instanceof Array ? argv.po : [argv.po];
var po = [];
poTemp.forEach(function(arg) {
  if (arg === undefined) {
    return;
  }
  if (arg.indexOf(':') == -1) {
    throw Error("Bad po param format. Need lang:path");
  }
  var tmp = arg.split(':');
  po.push({
    lang: tmp[0],
    name: tmp[1]
  });
});
argv.po = po;

gcin.create.js(argv, function(errs, data) {
  if (errs) {
    errs = errs.map(function(err) { return err.message }).join('\n');
  }
  process.stdout.write((errs || 'Success!') + '\n' + JSON.stringify(data, null, 2));
});